name: üõ°Ô∏è Security Tests

on:
  push:
    branches: [ main, dev, mobile ]
  pull_request:
    branches: [ main, dev ]
  schedule:
    - cron: '0 2 * * *'  # Todo dia √†s 2h da manh√£

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: üêç Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: üì¶ Instalar depend√™ncias
      run: |
        cd backend
        pip install -r requirements.txt
        pip install requests  # Para o script de seguran√ßa
    
    - name: üöÄ Iniciar backend Flask
        run: |
          cd backend
          python app.py &
          echo $! > backend.pid
          
          # Aguardar backend inicializar
          echo "‚è≥ Aguardando backend..."
          for i in {1..30}; do
            if curl -f http://localhost:5000/api/health >/dev/null 2>&1; then
              echo "‚úÖ Backend iniciado!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "‚ùå Timeout: Backend n√£o inicializou"
              exit 1
            fi
            sleep 2
          done
        env:
          FLASK_ENV: testing
        MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/test' }}
    
    - name: üõ°Ô∏è Executar an√°lise de seguran√ßa
      run: |
        python security-tests/security-analyzer.py
      continue-on-error: true  # N√£o falhar o job se houver vulnerabilidades
    
    - name: üì§ Upload dos relat√≥rios
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.run_number }}
        path: security-reports/
        retention-days: 30
    
    - name: üìß Enviar email com resultado
      uses: dawidd6/action-send-mail@v3
      if: always()
      with:
        server_address: ${{ secrets.SMTP_SERVER }}
        server_port: ${{ secrets.SMTP_PORT }}
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "üõ°Ô∏è Relat√≥rio de Seguran√ßa - Luxus Brech√≥ (Run #${{ github.run_number }})"
        to: ${{ secrets.EMAIL_TO }}
        from: ${{ secrets.EMAIL_FROM }}
        html_body: |
          <h2>üõ°Ô∏è Relat√≥rio de Seguran√ßa - Luxus Brech√≥</h2>
          
          <p><strong>Data:</strong> ${{ steps.date.outputs.date }}</p>
          <p><strong>Branch:</strong> ${{ github.ref_name }}</p>
          <p><strong>Commit:</strong> ${{ github.sha }}</p>
          <p><strong>Status:</strong> ${{ job.status }}</p>
          
          <p>Os relat√≥rios detalhados est√£o dispon√≠veis nos artefatos do workflow:</p>
          <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">
            Ver detalhes no GitHub Actions
          </a>
          
          <p>Para baixar os relat√≥rios:</p>
          <ol>
            <li>Clique no link acima</li>
            <li>Role at√© "Artifacts" na p√°gina</li>  
            <li>Baixe "security-reports-${{ github.run_number }}"</li>
          </ol>
          
          <hr>
          <p><em>Este √© um email autom√°tico do sistema de CI/CD</em></p>
    
    - name: üßπ Cleanup
      if: always()
      run: |
        if [ -f backend.pid ]; then
          kill $(cat backend.pid) 2>/dev/null || true
          rm backend.pid
        fi
